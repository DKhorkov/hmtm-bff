# https://www.howtographql.com/graphql-go/3-mutations/
# https://habr.com/ru/companies/ruvds/articles/444346/

scalar Time
scalar Any
scalar Upload

type User {
    id: ID!
    displayName: String!
    email: String!
    emailConfirmed: Boolean!
    phone: String
    phoneConfirmed: Boolean!
    telegram: String
    telegramConfirmed: Boolean!
    avatar: String
    createdAt: Time!
    updatedAt: Time!
}

type Category {
    id: ID!
    name: String!
}

type Tag {
    id: ID!
    name: String!
}

type ToyAttachment {
    id: ID!
    toyID: ID!
    link: String!
    createdAt: Time!
    updatedAt: Time!
}

type Toy {
    id: ID!
    master: Master!
    category: Category!
    name: String!
    description: String!
    price: Float!
    quantity: Int!
    createdAt: Time!
    updatedAt: Time!
    tags: [Tag!]
    attachments: [ToyAttachment!]
}

type Master {
    id: ID!
    user: User!
    info: String
    createdAt: Time!
    updatedAt: Time!
}

type TicketAttachment {
    id: ID!
    ticketID: ID!
    link: String!
    createdAt: Time!
    updatedAt: Time!
}

type Ticket {
    id: ID!
    user: User!
    category: Category!
    name: String!
    description: String!
    price: Float
    quantity: Int!
    createdAt: Time!
    updatedAt: Time!
    tags: [Tag!]
    attachments: [TicketAttachment!]
}

type Respond {
    id: ID!
    ticket: Ticket!
    master: Master!
    price: Float!
    comment: String
    createdAt: Time!
    updatedAt: Time!
}

type Email {
    id: ID!
    user: User!
    content: String!
    sentAt: Time!
}

type Query {
    # SSO queries:
    users: [User!]
    user(id: ID!): User!
    me: User!

    # Toys queries:
    master(id: ID!): Master!
    masters: [Master!]
    masterToys(masterId: ID!): [Toy!]
    toy(id: ID!): Toy!
    toys: [Toy!]
    myToys: [Toy!]
    tag(id: ID!): Tag!
    tags: [Tag!]
    category(id: ID!): Category!
    categories: [Category!]

    # Tickets queries:
    ticket(id: ID!): Ticket!
    tickets: [Ticket!]
    userTickets(userId: ID!): [Ticket!]
    myTickets: [Ticket!]
    respond(id: ID!): Respond!
    ticketResponds(ticketId: ID!): [Respond!]
    myResponds: [Respond!]

    # Notifications queries:
    myEmailCommunications: [Email!]
}

input LoginUserInput {
    email: String!
    password: String!
}

input RegisterUserInput {
    displayName: String!
    email: String!
    password: String!
}

input RegisterMasterInput {
    info: String
}

input UpdateMasterInput {
    id: ID!
    info: String
}

input AddToyInput {
    categoryId: ID!
    name: String!
    description: String!
    price: Float!
    quantity: Int!
    tags: [String!]
    attachments: [Upload!]
}

input UpdateToyInput {
    id: ID!
    categoryId: ID
    name: String
    description: String
    price: Float
    quantity: Int
    tags: [String!]
    attachments: [Upload!]
}

input DeleteToyInput {
    id: ID!
}

input CreateTicketInput {
    categoryId: ID!
    name: String!
    description: String!
    price: Float
    quantity: Int!
    tags: [String!]
    attachments: [Upload!]
}

input RespondToTicketInput {
    ticketId: ID!
    price: Float!
    comment: String
}

input UpdateRespondInput {
    id: ID!
    price: Float
    comment: String
}

input DeleteRespondInput {
    id: ID!
}

input UpdateTicketInput {
    id: ID!
    categoryId: ID
    name: String
    description: String
    price: Float
    quantity: Int
    tags: [String!]
    attachments: [Upload!]
}

input DeleteTicketInput {
    id: ID!
}

input VerifyUserEmailInput {
    verifyEmailToken: String!
}

input SendVerifyEmailMessageInput {
    email: String!
}

input ChangePasswordInput {
    oldPassword: String!
    newPassword: String!
}

input UpdateUserProfileInput {
    displayName: String
    phone: String
    telegram: String
    avatar: Upload
}

type Mutation {
    # SSO mutations:
    registerUser(input: RegisterUserInput!): ID!
    loginUser(input: LoginUserInput!): Boolean!
    logoutUser: Boolean!
    refreshTokens: Boolean!
    verifyUserEmail(input: VerifyUserEmailInput!): Boolean!
    forgetPassword: Boolean!
    sendVerifyEmailMessage(input: SendVerifyEmailMessageInput!): Boolean!
    changePassword(input: ChangePasswordInput!): Boolean!
    updateUserProfile(input: UpdateUserProfileInput!): Boolean!

    # Toys mutations:
    registerMaster(input: RegisterMasterInput!): ID!
    updateMaster(input: UpdateMasterInput!): Boolean!
    addToy(input: AddToyInput!): ID!
    updateToy(input: UpdateToyInput!): Boolean!
    deleteToy(input: DeleteToyInput!): Boolean!

    # Tickets mutations:
    createTicket(input: CreateTicketInput!): ID!
    respondToTicket(input: RespondToTicketInput!): ID!
    updateRespond(input: UpdateRespondInput!): Boolean!
    deleteRespond(input: DeleteRespondInput!): Boolean!
    updateTicket(input: UpdateTicketInput!): Boolean!
    deleteTicket(input: DeleteTicketInput!): Boolean!
}
