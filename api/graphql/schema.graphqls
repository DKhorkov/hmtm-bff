# https://www.howtographql.com/graphql-go/3-mutations/
# https://habr.com/ru/companies/ruvds/articles/444346/

scalar Time
scalar Any

type User {
    id: ID!
    email: String!
    createdAt: Time!
    updatedAt: Time!
}

type Category {
    id: ID!
    name: String!
}

type Tag {
    id: ID!
    name: String!
}

type Toy {
    id: ID!
    masterId: ID!
    categoryId: ID!
    name: String!
    description: String!
    price: Float!
    quantity: Int!
    createdAt: Time!
    updatedAt: Time!
    tags: [Tag!]!
}

type Master {
    id: ID!
    userId: ID!
    info: String!
    createdAt: Time!
    updatedAt: Time!
    toys: [Toy!]!
}

type Query {
    users: [User!]!
    user(id: ID!): User!
    me: User!
    master(id: ID!): Master!
    masters: [Master!]!
    toy(id: ID!): Toy!
    toys: [Toy!]!
    tag(id: ID!): Tag!
    tags: [Tag!]!
    category(id: ID!): Category!
    categories: [Category!]!
}

input LoginUserInput {
    email: String!
    password: String!
}

input RegisterUserInput {
    email: String!
    password: String!
}

input RegisterMasterInput {
    info: String!
}

input AddToyInput {
    CategoryID:  Int!
    Name: String!
    Description: String!
    Price: Float!
    Quantity: Int!
    TagsIDs: [Int!]!
}

type Mutation {
    registerUser(input: RegisterUserInput!): Int!
    loginUser(input: LoginUserInput!): Boolean!
    refreshTokens(input: Any): Boolean!
    registerMaster(input: RegisterMasterInput!): Int!
    addToy(input: AddToyInput!): Int!
}
