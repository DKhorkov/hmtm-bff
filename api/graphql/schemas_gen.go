// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graphqlapi

import (
	"github.com/99designs/gqlgen/graphql"
	"github.com/DKhorkov/hmtm-bff/internal/entities"
)

type AddToyInput struct {
	CategoryID  string            `json:"categoryId"`
	Name        string            `json:"name"`
	Description string            `json:"description"`
	Price       float64           `json:"price"`
	Quantity    int               `json:"quantity"`
	Tags        []string          `json:"tags,omitempty"`
	Attachments []*graphql.Upload `json:"attachments,omitempty"`
}

type ChangePasswordInput struct {
	OldPassword string `json:"oldPassword"`
	NewPassword string `json:"newPassword"`
}

type CreateTicketInput struct {
	CategoryID  string            `json:"categoryId"`
	Name        string            `json:"name"`
	Description string            `json:"description"`
	Price       *float64          `json:"price,omitempty"`
	Quantity    int               `json:"quantity"`
	Tags        []string          `json:"tags,omitempty"`
	Attachments []*graphql.Upload `json:"attachments,omitempty"`
}

type DeleteRespondInput struct {
	ID string `json:"id"`
}

type DeleteTicketInput struct {
	ID string `json:"id"`
}

type DeleteToyInput struct {
	ID string `json:"id"`
}

type ForgetPasswordInput struct {
	ForgetPasswordToken string `json:"forgetPasswordToken"`
	NewPassword         string `json:"newPassword"`
}

type LoginUserInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type MasterToysInput struct {
	MasterID   string                `json:"masterId"`
	Pagination *entities.Pagination  `json:"pagination,omitempty"`
	Filters    *entities.ToysFilters `json:"filters,omitempty"`
}

type MastersInput struct {
	Pagination *entities.Pagination `json:"pagination,omitempty"`
}

type Mutation struct {
}

type MyEmailCommunicationsInput struct {
	Pagination *entities.Pagination `json:"pagination,omitempty"`
}

type MyTicketsInput struct {
	Pagination *entities.Pagination     `json:"pagination,omitempty"`
	Filters    *entities.TicketsFilters `json:"filters,omitempty"`
}

type MyToysInput struct {
	Pagination *entities.Pagination  `json:"pagination,omitempty"`
	Filters    *entities.ToysFilters `json:"filters,omitempty"`
}

type Query struct {
}

type RegisterMasterInput struct {
	Info *string `json:"info,omitempty"`
}

type RegisterUserInput struct {
	DisplayName string `json:"displayName"`
	Email       string `json:"email"`
	Password    string `json:"password"`
}

type RespondToTicketInput struct {
	TicketID string  `json:"ticketId"`
	Price    float64 `json:"price"`
	Comment  *string `json:"comment,omitempty"`
}

type SendForgetPasswordMessageInput struct {
	Email string `json:"email"`
}

type SendVerifyEmailMessageInput struct {
	Email string `json:"email"`
}

type TicketsInput struct {
	Pagination *entities.Pagination     `json:"pagination,omitempty"`
	Filters    *entities.TicketsFilters `json:"filters,omitempty"`
}

type ToysInput struct {
	Pagination *entities.Pagination  `json:"pagination,omitempty"`
	Filters    *entities.ToysFilters `json:"filters,omitempty"`
}

type UpdateMasterInput struct {
	ID   string  `json:"id"`
	Info *string `json:"info,omitempty"`
}

type UpdateRespondInput struct {
	ID      string   `json:"id"`
	Price   *float64 `json:"price,omitempty"`
	Comment *string  `json:"comment,omitempty"`
}

type UpdateTicketInput struct {
	ID          string            `json:"id"`
	CategoryID  *string           `json:"categoryId,omitempty"`
	Name        *string           `json:"name,omitempty"`
	Description *string           `json:"description,omitempty"`
	Price       *float64          `json:"price,omitempty"`
	Quantity    *int              `json:"quantity,omitempty"`
	Tags        []string          `json:"tags,omitempty"`
	Attachments []*graphql.Upload `json:"attachments,omitempty"`
}

type UpdateToyInput struct {
	ID          string            `json:"id"`
	CategoryID  *string           `json:"categoryId,omitempty"`
	Name        *string           `json:"name,omitempty"`
	Description *string           `json:"description,omitempty"`
	Price       *float64          `json:"price,omitempty"`
	Quantity    *int              `json:"quantity,omitempty"`
	Tags        []string          `json:"tags,omitempty"`
	Attachments []*graphql.Upload `json:"attachments,omitempty"`
}

type UpdateUserProfileInput struct {
	DisplayName *string         `json:"displayName,omitempty"`
	Phone       *string         `json:"phone,omitempty"`
	Telegram    *string         `json:"telegram,omitempty"`
	Avatar      *graphql.Upload `json:"avatar,omitempty"`
}

type UserTicketsInput struct {
	UserID     string                   `json:"userId"`
	Pagination *entities.Pagination     `json:"pagination,omitempty"`
	Filters    *entities.TicketsFilters `json:"filters,omitempty"`
}

type UsersInput struct {
	Pagination *entities.Pagination `json:"pagination,omitempty"`
}

type VerifyUserEmailInput struct {
	VerifyEmailToken string `json:"verifyEmailToken"`
}
