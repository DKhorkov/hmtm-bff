services:
  hmtm_bff:
    container_name: hmtm_bff
    image: hmtm_bff
    build:
      context: ../../..
      dockerfile: ./build/package/Dockerfile
    ports:
      - "${HMTM_BFF_OUTER_PORT}:${HMTM_BFF_INNER_PORT}"
    depends_on:
      - jaeger
      - hmtm_bff_cache
    volumes:
      - ../../../logs/:/app/logs/
    networks:
      - hmtm_network

  jaeger:
    image: jaegertracing/all-in-one:latest
    env_file:
      - ../../../.env
    ports:
      - "${TRACING_OUTER_API_TRACES_PORT}:${TRACING_INNER_API_TRACES_PORT}"
      - "${TRACING_OUTER_WEB_PORT}:${TRACING_INNER_WEB_PORT}"
    networks:
      - hmtm_network
    restart: unless-stopped

  # Prometheus для сбора метрик
  prometheus:
    image: prom/prometheus
    env_file:
      - ../../../.env
    ports:
      - "${PROMETHEUS_OUTER_PORT}:${PROMETHEUS_INNER_PORT}"
    volumes:
      - ../../../prometheus.yml:/etc/prometheus/prometheus.yml  # Конфиг Prometheus
    networks:
      - hmtm_network
    restart: unless-stopped
    depends_on:
      - hmtm_bff

  # Grafana для визуализации
  grafana:
    image: grafana/grafana
    env_file:
      - ../../../.env
    ports:
      - "${GRAFANA_OUTER_PORT}:${GRAFANA_INNER_PORT}"
    volumes:
      - ../../../grafana:/var/lib/grafana  # Сохраняет данные Grafana
    networks:
      - hmtm_network
    restart: unless-stopped
    depends_on:
      - prometheus

  hmtm_bff_cache:
    container_name: hmtm_bff_cache
    hostname: hmtm_bff_cache
    image: redis:latest
    env_file:
      - ../../../.env
    ports:
      - "${HMTM_BFF_CACHE_OUTER_PORT}:${HMTM_BFF_CACHE_INNER_PORT}"
    volumes:
      - ../../../redis_data:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: redis-server --requirepass ${HMTM_BFF_CACHE_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$HMTM_BFF_CACHE_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - hmtm_network

networks:
  hmtm_network:
    name: hmtm_network
    external: true
