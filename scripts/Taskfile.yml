version: "3"

tasks:
  docker_network:
    desc: "Create docker network for project."
    aliases:
      - network
    cmd: sudo docker network create hmtm_network

  docker_build_prod:
    desc: "Build docker container for production."
    aliases:
      - build_prod
    cmd: sudo docker compose -f ../build/package/prod/docker-compose.yml build

  docker_run_prod:
    desc: "Launch docker container for production."
    aliases:
      - run_prod
    cmd: sudo docker compose -f ../build/package/prod/docker-compose.yml up

  docker_build_local:
    desc: "Build docker container for local launch."
    aliases:
      - build_local
    cmd: sudo docker compose -f ../build/package/local/docker-compose.yml build

  docker_run_local:
    desc: "Launch docker container for local launch."
    aliases:
      - run_local
    cmd: sudo docker compose -f ../build/package/local/docker-compose.yml up

  docker_stop:
    desc: "Stop all docker containers."
    aliases:
      - stop
    cmd:  sudo docker stop $(sudo docker ps -a -q)

  docker_clean:
    desc: "Clean docker containers, images and volumes."
    cmd: sudo docker system prune -a --volumes

  clean_up:
    desc: "Clean up all folders, docker volumes, images and containers."
    dir: ../
    aliases:
      - clean
    cmds:
      - sudo rm -rf logs/
      - sudo rm -rf coverage/
      - sudo rm -rf build/package/prod/.env
      - sudo rm -rf build/package/local/.env
      - task: docker_clean

  prod:
    desc: "Run application and it's dependencies for production."
    cmds:
      - task: create_logs_folder
      - task: prepare_env_file_prod
      - task: docker_build_prod
      - task: docker_run_prod

  local:
    desc: "Run application dependencies for local launch."
    cmds:
      - task: create_logs_folder
      - task: prepare_env_file_local
      - task: docker_build_local
      - task: docker_run_local

  create_logs_folder:
    desc: "Create logs folder for docker volume purposes."
    internal: true
    dir: ../
    cmd: mkdir -p logs

  prepare_env_file_prod:
    desc: "Prepare .env file for production."
    internal: true
    dir: ../
    cmds:
      - cp .env.example .env
      - cp .env build/package/prod/.env

  prepare_env_file_local:
    desc: "Prepare .env file for local launch."
    internal: true
    dir: ../
    cmds:
      - cp .env.local .env
      - cp .env build/package/local/.env

  graphql_generate:
    desc: "Generate GraphQL base files."
    aliases:
      - graphql
      - generate
      - gen
    cmd: go run github.com/99designs/gqlgen generate

  tests:
    desc: "Run tests and save coverage to coverage folder."
    aliases:
      - test
    dir: ../
    cmds:
      - mkdir -p ./coverage
      - go test -v -shuffle=on -coverprofile ./coverage/coverage.out -coverpkg=./... ./...
      - go tool cover -html ./coverage/coverage.out -o ./coverage/coverage.html

  benchmarks:
    desc: "Run benchmarks."
    aliases:
      - bench
    dir: ../
    cmd: go test -v ./... -bench=. -run=xxx -benchmem >> bench.txt

  linters:
    desc: "Run linters."
    aliases:
      - lint
    dir: ../
    cmd: golangci-lint run -v --fix

  upload_docker_image:
    desc: "Uploads docker image to dockerhub."
    aliases:
      - upload
    dir: ../
    cmds:
      - task: prepare_env_file_prod
      - task: docker_build_prod
      - sudo docker tag hmtm_bff d3m0s/hmtm_bff
      - sudo docker push d3m0s/hmtm_bff
